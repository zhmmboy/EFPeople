//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace People.CreateModelsHelper
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PeopleDBEntities : DbContext
    {
        public PeopleDBEntities()
            : base("name=PeopleDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<P_Activity> P_Activity { get; set; }
        public virtual DbSet<P_Album> P_Album { get; set; }
        public virtual DbSet<P_AlbumInfo> P_AlbumInfo { get; set; }
        public virtual DbSet<P_Answer> P_Answer { get; set; }
        public virtual DbSet<P_Class> P_Class { get; set; }
        public virtual DbSet<P_News> P_News { get; set; }
        public virtual DbSet<P_Person> P_Person { get; set; }
        public virtual DbSet<P_Photo> P_Photo { get; set; }
        public virtual DbSet<P_Question> P_Question { get; set; }
        public virtual DbSet<P_Tags> P_Tags { get; set; }
        public virtual DbSet<P_User> P_User { get; set; }
        public virtual DbSet<V_GetAlbumList> V_GetAlbumList { get; set; }
        public virtual DbSet<v_GetNews> v_GetNews { get; set; }
        public virtual DbSet<v_GetPersonList> v_GetPersonList { get; set; }
        public virtual DbSet<V_GetQuestionList> V_GetQuestionList { get; set; }
    
        public virtual int P_AddNews(string nform, string nformurl, string nauthor, string ntitle, string ntitlepic, string ntips, string ncontent, string ntags, Nullable<bool> nispage, Nullable<int> nclass1, Nullable<int> nclass2, Nullable<byte> nlevel, Nullable<System.Guid> nId, Nullable<System.Guid> personId)
        {
            var nformParameter = nform != null ?
                new ObjectParameter("nform", nform) :
                new ObjectParameter("nform", typeof(string));
    
            var nformurlParameter = nformurl != null ?
                new ObjectParameter("nformurl", nformurl) :
                new ObjectParameter("nformurl", typeof(string));
    
            var nauthorParameter = nauthor != null ?
                new ObjectParameter("nauthor", nauthor) :
                new ObjectParameter("nauthor", typeof(string));
    
            var ntitleParameter = ntitle != null ?
                new ObjectParameter("ntitle", ntitle) :
                new ObjectParameter("ntitle", typeof(string));
    
            var ntitlepicParameter = ntitlepic != null ?
                new ObjectParameter("ntitlepic", ntitlepic) :
                new ObjectParameter("ntitlepic", typeof(string));
    
            var ntipsParameter = ntips != null ?
                new ObjectParameter("ntips", ntips) :
                new ObjectParameter("ntips", typeof(string));
    
            var ncontentParameter = ncontent != null ?
                new ObjectParameter("ncontent", ncontent) :
                new ObjectParameter("ncontent", typeof(string));
    
            var ntagsParameter = ntags != null ?
                new ObjectParameter("ntags", ntags) :
                new ObjectParameter("ntags", typeof(string));
    
            var nispageParameter = nispage.HasValue ?
                new ObjectParameter("nispage", nispage) :
                new ObjectParameter("nispage", typeof(bool));
    
            var nclass1Parameter = nclass1.HasValue ?
                new ObjectParameter("nclass1", nclass1) :
                new ObjectParameter("nclass1", typeof(int));
    
            var nclass2Parameter = nclass2.HasValue ?
                new ObjectParameter("nclass2", nclass2) :
                new ObjectParameter("nclass2", typeof(int));
    
            var nlevelParameter = nlevel.HasValue ?
                new ObjectParameter("nlevel", nlevel) :
                new ObjectParameter("nlevel", typeof(byte));
    
            var nIdParameter = nId.HasValue ?
                new ObjectParameter("nId", nId) :
                new ObjectParameter("nId", typeof(System.Guid));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AddNews", nformParameter, nformurlParameter, nauthorParameter, ntitleParameter, ntitlepicParameter, ntipsParameter, ncontentParameter, ntagsParameter, nispageParameter, nclass1Parameter, nclass2Parameter, nlevelParameter, nIdParameter, personIdParameter);
        }
    
        public virtual int P_EditNews(string nform, string nauthor, string ntitle, string ntitlepic, string ntips, string ncontent, string ntags, string nlinkurl, Nullable<bool> nispage, Nullable<int> nclass1, Nullable<int> nclass2, Nullable<int> nstatus, Nullable<byte> nlevel, Nullable<System.Guid> nid)
        {
            var nformParameter = nform != null ?
                new ObjectParameter("nform", nform) :
                new ObjectParameter("nform", typeof(string));
    
            var nauthorParameter = nauthor != null ?
                new ObjectParameter("nauthor", nauthor) :
                new ObjectParameter("nauthor", typeof(string));
    
            var ntitleParameter = ntitle != null ?
                new ObjectParameter("ntitle", ntitle) :
                new ObjectParameter("ntitle", typeof(string));
    
            var ntitlepicParameter = ntitlepic != null ?
                new ObjectParameter("ntitlepic", ntitlepic) :
                new ObjectParameter("ntitlepic", typeof(string));
    
            var ntipsParameter = ntips != null ?
                new ObjectParameter("ntips", ntips) :
                new ObjectParameter("ntips", typeof(string));
    
            var ncontentParameter = ncontent != null ?
                new ObjectParameter("ncontent", ncontent) :
                new ObjectParameter("ncontent", typeof(string));
    
            var ntagsParameter = ntags != null ?
                new ObjectParameter("ntags", ntags) :
                new ObjectParameter("ntags", typeof(string));
    
            var nlinkurlParameter = nlinkurl != null ?
                new ObjectParameter("nlinkurl", nlinkurl) :
                new ObjectParameter("nlinkurl", typeof(string));
    
            var nispageParameter = nispage.HasValue ?
                new ObjectParameter("nispage", nispage) :
                new ObjectParameter("nispage", typeof(bool));
    
            var nclass1Parameter = nclass1.HasValue ?
                new ObjectParameter("nclass1", nclass1) :
                new ObjectParameter("nclass1", typeof(int));
    
            var nclass2Parameter = nclass2.HasValue ?
                new ObjectParameter("nclass2", nclass2) :
                new ObjectParameter("nclass2", typeof(int));
    
            var nstatusParameter = nstatus.HasValue ?
                new ObjectParameter("nstatus", nstatus) :
                new ObjectParameter("nstatus", typeof(int));
    
            var nlevelParameter = nlevel.HasValue ?
                new ObjectParameter("nlevel", nlevel) :
                new ObjectParameter("nlevel", typeof(byte));
    
            var nidParameter = nid.HasValue ?
                new ObjectParameter("nid", nid) :
                new ObjectParameter("nid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_EditNews", nformParameter, nauthorParameter, ntitleParameter, ntitlepicParameter, ntipsParameter, ncontentParameter, ntagsParameter, nlinkurlParameter, nispageParameter, nclass1Parameter, nclass2Parameter, nstatusParameter, nlevelParameter, nidParameter);
        }
    
        public virtual int P_Paging(string tables, string primaryKey, Nullable<int> currentPage, Nullable<int> pageSize, string filter, string fields, string sort, string group)
        {
            var tablesParameter = tables != null ?
                new ObjectParameter("Tables", tables) :
                new ObjectParameter("Tables", typeof(string));
    
            var primaryKeyParameter = primaryKey != null ?
                new ObjectParameter("PrimaryKey", primaryKey) :
                new ObjectParameter("PrimaryKey", typeof(string));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var groupParameter = group != null ?
                new ObjectParameter("Group", group) :
                new ObjectParameter("Group", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_Paging", tablesParameter, primaryKeyParameter, currentPageParameter, pageSizeParameter, filterParameter, fieldsParameter, sortParameter, groupParameter);
        }
    
        public virtual int P_QueryBySql(string tablename, string fields, string condition, Nullable<int> toprows)
        {
            var tablenameParameter = tablename != null ?
                new ObjectParameter("tablename", tablename) :
                new ObjectParameter("tablename", typeof(string));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("fields", fields) :
                new ObjectParameter("fields", typeof(string));
    
            var conditionParameter = condition != null ?
                new ObjectParameter("condition", condition) :
                new ObjectParameter("condition", typeof(string));
    
            var toprowsParameter = toprows.HasValue ?
                new ObjectParameter("toprows", toprows) :
                new ObjectParameter("toprows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_QueryBySql", tablenameParameter, fieldsParameter, conditionParameter, toprowsParameter);
        }
    }
}
